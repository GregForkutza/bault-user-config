#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {

     behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <220>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
        mt: mod_tap {
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <220>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
        as_ht: autoshift_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            bindings = <&shifted>, <&kp>;
            flavor = "tap-preferred";
        };

        combos {
            compatible = "zmk,combos";
            combo_tab {
                timeout-ms = <40>;
                key-positions = <0 1>;
                bindings = <&kp TAB>;
            };
            combo_del {
                timeout-ms = <40>;
                key-positions = <9 10>;
                bindings = <&kp DEL>;
            };
	    combo_F3 {
		timeout-ms = <40>;
		key-positions = <1 2>;
		bindings = <&kp F3>;
	    };
	    combo_esc {
		timeout-ms = <40>;
		key-positions = <22 23>; 	
		bindings = <&kp ESC>;
	    };
	    combo_l2left {
		timeout-ms = <50>;
		key-positions = <31 32>;
		bindings = <&mo 3>;
	    };
	     combo_l2right {
		timeout-ms = <50>;
		key-positions = <35 36>;
		bindings = <&mo 3>;
	    };
            combo_reset {
                timeout-ms = <50>;
                key-positions = <0 9>;
                layers = <2>;
                bindings = <&sys_reset>;
            };
            combo_boot {
                timeout-ms = <50>;
                key-positions = <5 20>;
                layers = <2>;
                bindings = <&bootloader>;
            };
        };
    };

    macros {
        shifted: macro_shifted_kp {
            #binding-cells = <1>;
            compatible = "zmk,behavior-macro-one-param";
            bindings =
              <&macro_press &kp LSHFT>,
              <&macro_param_1to1 &macro_tap &kp MACRO_PLACEHOLDER>,
              <&macro_release &kp LSHFT>;
        };
        as: autoshift {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
              <&macro_press>,
              <&macro_param_1to1>,
              <&macro_param_1to2>,
              <&as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
              <&macro_pause_for_release>,
              <&macro_release>,
              <&macro_param_1to1>,
              <&macro_param_1to2>,
              <&as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;
        };
    };



keymap {
    compatible = "zmk,keymap";
    default_layer {
        bindings = <
            &ht LALT Q     &kp W      &kp E      &kp R      &kp T      &kp Y      &kp U      &kp I      &kp O      &kp P      &as SQT    
            &ht LCTRL A    &kp S      &kp D      &kp F      &kp G      &kp H      &kp J      &kp K      &kp L      &kp RET     
            &ht LSHIFT Z   &kp X      &kp C      &kp V      &kp B      &kp N      &kp M      &as COMMA  &as DOT    &as FSLH
                           &none      &kp N1     &kp N2     &kp BSPC   &kp SPACE  &kp N3     &kp N4     &kp none
        >;
    };

    num_layer {
        bindings = <
            &as N1         &as N2     &as N3     &as N4     &as N5     &as N6     &as N7     &as N8     &as N9     &as N0     &as GRAVE 
            &kp LEFT       &kp UP     &kp DOWN   &kp RIGHT  &none      &none      &as SEMI   &as MINUS  &as EQUAL  &trans
            &trans         &none      &none      &none      &none      &none      &none      &trans     &trans     &trans
                           &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans
        >;
    };

    sym_layer {
        bindings = <
            &none          &none      &none      &none      &none      &none      &none      &none      &none      &none     &none      
            &none          &kp LEFT   &kp UP     &kp DOWN   &kp RIGHT  &none      &as LBKT   &as RBKT   &as BSLH  &trans
            &none          &none      &none      &none      &none      &none      &none      &none      &none      &none
                           &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans          
        >;
    };

    func_layer {
        bindings = <
            &kp F1         &kp F2        &kp F3           &kp F4           &kp F5   &kp F6   &kp F7   &kp F8   &kp F9   &kp F10   &kp F11
            &bt BT_CLR     &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2     &none    &none    &none    &none    &kp F12   &trans 
            &none          &none         &none            &none            &none    &none    &none    &none    &none    &none
                           &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans              
        >;
    };
};
};
